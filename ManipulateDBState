
SELECT column_name, data_type, data_length
FROM user_tab_columns
WHERE table_name = 'PRODUCTLIST'
ORDER BY column_id;

UPDATE PRODUCTLIST p
SET (PRICE, DESCRIPTION) = (
    SELECT s.PRICE, s.DESCRIPTION
    FROM STOREFRONT s
    WHERE s.PRODUCTCODE = p.PRODUCTCODE
)
WHERE EXISTS (
    SELECT 1 FROM STOREFRONT s WHERE s.PRODUCTCODE = p.PRODUCTCODE
);

DROP TABLE STOREFRONT;

CREATE TABLE CHATLOG (
    CHATID NUMBER(3) PRIMARY KEY,
    RECEIVERID NUMBER(3),
    SENDERID NUMBER(3),
    DATESENT DATE,
    CONTENT VARCHAR2(250),
    CONSTRAINT fk_chat_receiver FOREIGN KEY (RECEIVERID) REFERENCES USERBASE(USERID),
    CONSTRAINT fk_chat_sender FOREIGN KEY (SENDERID) REFERENCES USERBASE(USERID)
);

-- Insert sample chat messages
INSERT INTO CHATLOG VALUES (1, 101, 102, SYSDATE - 10, 'Hey, are you online?');
INSERT INTO CHATLOG VALUES (2, 102, 101, SYSDATE - 9, 'Yes! Just got on.');
INSERT INTO CHATLOG VALUES (3, 103, 104, SYSDATE - 7, 'Want to play tonight?');
INSERT INTO CHATLOG VALUES (4, 104, 103, SYSDATE - 7, 'Sure thing!');
INSERT INTO CHATLOG VALUES (5, 105, 101, SYSDATE - 5, 'Need help with a quest.');
INSERT INTO CHATLOG VALUES (6, 101, 105, SYSDATE - 4, 'I got you!');
INSERT INTO CHATLOG VALUES (7, 106, 102, SYSDATE - 3, 'What’s your favorite game?');
INSERT INTO CHATLOG VALUES (8, 102, 106, SYSDATE - 3, 'Probably VaporStrike.');
INSERT INTO CHATLOG VALUES (9, 107, 108, SYSDATE - 2, 'Good game last night!');
INSERT INTO CHATLOG VALUES (10, 108, 107, SYSDATE - 1, 'GG!');

CREATE TABLE FRIENDSLIST (
    USERID NUMBER(3),
    FRIENDID NUMBER(3),
    PRIMARY KEY (USERID, FRIENDID),
    CONSTRAINT fk_friend_user FOREIGN KEY (USERID) REFERENCES USERBASE(USERID),
    CONSTRAINT fk_friend_friend FOREIGN KEY (FRIENDID) REFERENCES USERBASE(USERID)
);

-- Insert sample friendships
INSERT INTO FRIENDSLIST VALUES (101, 102);
INSERT INTO FRIENDSLIST VALUES (102, 101);
INSERT INTO FRIENDSLIST VALUES (103, 104);
INSERT INTO FRIENDSLIST VALUES (104, 103);
INSERT INTO FRIENDSLIST VALUES (105, 101);
INSERT INTO FRIENDSLIST VALUES (106, 102);
INSERT INTO FRIENDSLIST VALUES (107, 108);
INSERT INTO FRIENDSLIST VALUES (108, 107);
INSERT INTO FRIENDSLIST VALUES (109, 110);
INSERT INTO FRIENDSLIST VALUES (110, 109);

CREATE TABLE WISHLIST (
    USERID NUMBER(3),
    PRODUCTCODE VARCHAR2(5),
    POSITION NUMBER(3),
    PRIMARY KEY (USERID, PRODUCTCODE),
    CONSTRAINT fk_wish_user FOREIGN KEY (USERID) REFERENCES USERBASE(USERID),
    CONSTRAINT fk_wish_product FOREIGN KEY (PRODUCTCODE) REFERENCES PRODUCTLIST(PRODUCTCODE)
);

-- Insert sample wishlist items
INSERT INTO WISHLIST VALUES (101, 'P1001', 1);
INSERT INTO WISHLIST VALUES (101, 'P1002', 2);
INSERT INTO WISHLIST VALUES (102, 'P1003', 1);
INSERT INTO WISHLIST VALUES (103, 'P1004', 1);
INSERT INTO WISHLIST VALUES (103, 'P1005', 2);
INSERT INTO WISHLIST VALUES (104, 'P1001', 3);
INSERT INTO WISHLIST VALUES (105, 'P1006', 1);
INSERT INTO WISHLIST VALUES (106, 'P1002', 2);
INSERT INTO WISHLIST VALUES (107, 'P1007', 1);
INSERT INTO WISHLIST VALUES (108, 'P1008', 1);

CREATE TABLE USERPROFILE (
    USERID NUMBER(3) PRIMARY KEY,
    IMAGEFILE VARCHAR2(250),
    DESCRIPTION VARCHAR2(250),
    CONSTRAINT fk_profile_user FOREIGN KEY (USERID) REFERENCES USERBASE(USERID)
);

-- Insert sample profile data
INSERT INTO USERPROFILE VALUES (101, '/images/u101.png', 'Casual gamer, loves RPGs.');
INSERT INTO USERPROFILE VALUES (102, '/images/u102.png', 'Competitive FPS player.');
INSERT INTO USERPROFILE VALUES (103, '/images/u103.png', 'Exploring open-worlds.');
INSERT INTO USERPROFILE VALUES (104, '/images/u104.png', 'Retro gamer and collector.');
INSERT INTO USERPROFILE VALUES (105, '/images/u105.png', 'Streamer and content creator.');
INSERT INTO USERPROFILE VALUES (106, '/images/u106.png', 'Always online!');
INSERT INTO USERPROFILE VALUES (107, '/images/u107.png', 'Looking for co-op buddies.');
INSERT INTO USERPROFILE VALUES (108, '/images/u108.png', 'Enjoys indie titles.');
INSERT INTO USERPROFILE VALUES (109, '/images/u109.png', 'Achievement hunter.');
INSERT INTO USERPROFILE VALUES (110, '/images/u110.png', 'Just here for fun.');


CREATE TABLE SECURITYQUESTION (
    QUESTIONID NUMBER PRIMARY KEY,
    USERID NUMBER(3),
    QUESTION VARCHAR2(250),
    ANSWER VARCHAR2(250),
    CONSTRAINT fk_sec_user FOREIGN KEY (USERID) REFERENCES USERBASE(USERID)
);

-- Insert sample questions
INSERT INTO SECURITYQUESTION VALUES (1, 101, 'What is your favorite game?', 'VaporStrike');
INSERT INTO SECURITYQUESTION VALUES (2, 102, 'What is your pet’s name?', 'Shadow');
INSERT INTO SECURITYQUESTION VALUES (3, 103, 'Where were you born?', 'Boston');
INSERT INTO SECURITYQUESTION VALUES (4, 104, 'What was your first console?', 'NES');
INSERT INTO SECURITYQUESTION VALUES (5, 105, 'What is your favorite color?', 'Blue');
INSERT INTO SECURITYQUESTION VALUES (6, 106, 'Who is your favorite developer?', 'EpicGames');
INSERT INTO SECURITYQUESTION VALUES (7, 107, 'What is your dream job?', 'Game Designer');
INSERT INTO SECURITYQUESTION VALUES (8, 108, 'What city were you married in?', 'Orlando');
INSERT INTO SECURITYQUESTION VALUES (9, 109, 'What is your favorite movie?', 'Matrix');
INSERT INTO SECURITYQUESTION VALUES (10, 110, 'What is your high school name?', 'Central High');


CREATE TABLE COMMUNITYRULES (
    RULENUM NUMBER(3) PRIMARY KEY,
    TITLE VARCHAR2(250),
    DESCRIPTION VARCHAR2(250),
    SEVERITYPOINT NUMBER(4)
);

-- Insert community rules
INSERT INTO COMMUNITYRULES VALUES (1, 'No Hate Speech', 'Respect all users.', 10);
INSERT INTO COMMUNITYRULES VALUES (2, 'No Spam', 'Avoid repetitive posting.', 7);
INSERT INTO COMMUNITYRULES VALUES (3, 'No Cheating', 'Fair play only.', 9);
INSERT INTO COMMUNITYRULES VALUES (4, 'No Exploits', 'Do not abuse game bugs.', 8);
INSERT INTO COMMUNITYRULES VALUES (5, 'Respect Mods', 'Follow moderator instructions.', 6);
INSERT INTO COMMUNITYRULES VALUES (6, 'Keep PG', 'No explicit content.', 9);
INSERT INTO COMMUNITYRULES VALUES (7, 'Privacy', 'Do not share private info.', 10);
INSERT INTO COMMUNITYRULES VALUES (8, 'No Harassment', 'Treat others kindly.', 10);
INSERT INTO COMMUNITYRULES VALUES (9, 'Language', 'Avoid profanity.', 5);
INSERT INTO COMMUNITYRULES VALUES (10, 'Honesty', 'No false reporting.', 4);

CREATE TABLE INFRACTIONS (
    INFRACTIONID NUMBER PRIMARY KEY,
    USERID NUMBER(3),
    RULENUM NUMBER(3),
    DATEASSIGNED DATE,
    PENALTY VARCHAR2(250),
    CONSTRAINT fk_inf_user FOREIGN KEY (USERID) REFERENCES USERBASE(USERID),
    CONSTRAINT fk_inf_rule FOREIGN KEY (RULENUM) REFERENCES COMMUNITYRULES(RULENUM)
);

-- Insert infractions
INSERT INTO INFRACTIONS VALUES (1, 101, 2, SYSDATE - 60, 'Warning issued');
INSERT INTO INFRACTIONS VALUES (2, 102, 1, SYSDATE - 45, '1-day suspension');
INSERT INTO INFRACTIONS VALUES (3, 103, 3, SYSDATE - 30, '3-day ban');
INSERT INTO INFRACTIONS VALUES (4, 104, 4, SYSDATE - 15, 'Temporary mute');
INSERT INTO INFRACTIONS VALUES (5, 105, 5, SYSDATE - 10, 'Reminder sent');
INSERT INTO INFRACTIONS VALUES (6, 106, 6, SYSDATE - 8, 'Warning issued');
INSERT INTO INFRACTIONS VALUES (7, 107, 7, SYSDATE - 5, 'Account review pending');
INSERT INTO INFRACTIONS VALUES (8, 108, 8, SYSDATE - 3, '7-day ban');
INSERT INTO INFRACTIONS VALUES (9, 109, 9, SYSDATE - 2, 'Warning issued');
INSERT INTO INFRACTIONS VALUES (10, 110, 10, SYSDATE - 1, 'Reminder sent')

CREATE TABLE USERSUPPORT (
    TICKETID NUMBER PRIMARY KEY,
    EMAIL VARCHAR2(250),
    ISSUE VARCHAR2(250),
    DATESUBMITTED DATE,
    DATEUPDATED DATE,
    STATUS VARCHAR2(250)
);

-- Insert support tickets
INSERT INTO USERSUPPORT VALUES (1, 'user101@mail.com', 'Login issue', SYSDATE - 10, SYSDATE - 9, 'CLOSED');
INSERT INTO USERSUPPORT VALUES (2, 'user102@mail.com', 'Payment not processing', SYSDATE - 8, SYSDATE - 6, 'IN PROGRESS');
INSERT INTO USERSUPPORT VALUES (3, 'user103@mail.com', 'Game crash on load', SYSDATE - 7, SYSDATE - 3, 'NEW');
INSERT INTO USERSUPPORT VALUES (4, 'user104@mail.com', 'Profile picture bug', SYSDATE - 6, SYSDATE - 4, 'IN PROGRESS');
INSERT INTO USERSUPPORT VALUES (5, 'user105@mail.com', 'Chat not working', SYSDATE - 5, SYSDATE - 2, 'CLOSED');
INSERT INTO USERSUPPORT VALUES (6, 'user106@mail.com', 'Missing items', SYSDATE - 5, SYSDATE - 1, 'NEW');
INSERT INTO USERSUPPORT VALUES (7, 'user107@mail.com', 'Account hacked', SYSDATE - 4, SYSDATE - 1, 'IN PROGRESS');
INSERT INTO USERSUPPORT VALUES (8, 'user108@mail.com', 'Password reset issue', SYSDATE - 3, SYSDATE - 1, 'CLOSED');
INSERT INTO USERSUPPORT VALUES (9, 'user109@mail.com', 'Friend request bug', SYSDATE - 2, SYSDATE - 1, 'NEW');
INSERT INTO USERSUPPORT VALUES (10, 'user110@mail.com', 'Game not saving progress', SYSDATE - 2, SYSDATE, 'IN PROGRESS');

CREATE TABLE USERSUPPORT (
    TICKETID NUMBER PRIMARY KEY,
    EMAIL VARCHAR2(250),
    ISSUE VARCHAR2(250),
    DATESUBMITTED DATE,
    DATEUPDATED DATE,
    STATUS VARCHAR2(250)
);

-- Insert support tickets
INSERT INTO USERSUPPORT VALUES (1, 'user101@mail.com', 'Login issue', SYSDATE - 10, SYSDATE - 9, 'CLOSED');
INSERT INTO USERSUPPORT VALUES (2, 'user102@mail.com', 'Payment not processing', SYSDATE - 8, SYSDATE - 6, 'IN PROGRESS');
INSERT INTO USERSUPPORT VALUES (3, 'user103@mail.com', 'Game crash on load', SYSDATE - 7, SYSDATE - 3, 'NEW');
INSERT INTO USERSUPPORT VALUES (4, 'user104@mail.com', 'Profile picture bug', SYSDATE - 6, SYSDATE - 4, 'IN PROGRESS');
INSERT INTO USERSUPPORT VALUES (5, 'user105@mail.com', 'Chat not working', SYSDATE - 5, SYSDATE - 2, 'CLOSED');
INSERT INTO USERSUPPORT VALUES (6, 'user106@mail.com', 'Missing items', SYSDATE - 5, SYSDATE - 1, 'NEW');
INSERT INTO USERSUPPORT VALUES (7, 'user107@mail.com', 'Account hacked', SYSDATE - 4, SYSDATE - 1, 'IN PROGRESS');
INSERT INTO USERSUPPORT VALUES (8, 'user108@mail.com', 'Password reset issue', SYSDATE - 3, SYSDATE - 1, 'CLOSED');
INSERT INTO USERSUPPORT VALUES (9, 'user109@mail.com', 'Friend request bug', SYSDATE - 2, SYSDATE - 1, 'NEW');
INSERT INTO USERSUPPORT VALUES (10, 'user110@mail.com', 'Game not saving progress', SYSDATE - 2, SYSDATE, 'IN PROGRESS');

-- View 1: Every unique question from SECURITYQUESTION
CREATE OR REPLACE VIEW UNIQUE_QUESTIONS AS
SELECT DISTINCT QUESTION
FROM SECURITYQUESTION;

-- View 2: Tickets with status NEW or IN PROGRESS, sorted by earliest DATEUPDATED
CREATE OR REPLACE VIEW ACTIVE_TICKETS AS
SELECT TICKETID, EMAIL, ISSUE, DATEUPDATED
FROM USERSUPPORT
WHERE STATUS IN ('NEW', 'IN PROGRESS')
ORDER BY DATEUPDATED ASC;
